# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Page {
  total: Int!
  pageNum: Int!
  pageSize: Int!
}

type Result {
  code: Int!
  message: String
  data: String
}

type UserType {
  id: String!

  """nickname"""
  name: String!

  """description"""
  desc: String!

  """tel"""
  tel: String!

  """avatar"""
  avatar: String
}

type OSSType {
  """expiry date"""
  expire: String!

  """strategy"""
  policy: String!

  """signature"""
  signature: String!

  """key"""
  accessId: String!

  """host"""
  host: String!

  """folder"""
  dir: String!
}

type StudentType {
  id: String!
  createdAt: DateTime!
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  deletedAt: DateTime
  deletedBy: String

  """nickname"""
  name: String

  """tel"""
  tel: String

  """avatar"""
  avatar: String

  """account"""
  account: String

  """openid"""
  openid: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type StudentResult {
  code: Int!
  message: String!
  data: StudentType
}

type StudentResults {
  code: Int!
  message: String!
  data: [StudentType!]
  page: Page
}

type OrderTimeType {
  """startTime"""
  startTime: String!

  """endTime"""
  endTime: String!

  """key"""
  key: Float!
}

type ReducibleTimeType {
  """week"""
  week: String!

  """orderTime json"""
  orderTime: [OrderTimeType!]!
}

type CourseType {
  id: String!
  createdAt: DateTime!
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  deletedAt: DateTime
  deletedBy: String

  """name"""
  name: String!

  """desc"""
  desc: String

  """group"""
  group: String!

  """coverUrl"""
  coverUrl: String

  """baseAbility"""
  baseAbility: String!

  """limitNumber"""
  limitNumber: Float!

  """duration"""
  duration: Float!

  """reserveInfo"""
  reserveInfo: String

  """refundInfo"""
  refundInfo: String

  """otherInfo"""
  otherInfo: String

  """reducibleTime"""
  reducibleTime: [ReducibleTimeType!]
}

type OrgImageType {
  id: String
  url: String!
  remark: String
}

type OrganizationType {
  id: String!
  createdAt: DateTime!
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  deletedAt: DateTime
  deletedBy: String

  """license"""
  businessLicense: String!

  """identityCardFrontImg"""
  identityCardFrontImg: String!

  """identityCardBackImg"""
  identityCardBackImg: String!

  """tags"""
  tags: String

  """description"""
  description: String

  """name"""
  name: String

  """logo"""
  logo: String

  """longitude"""
  longitude: String

  """latitude"""
  latitude: String

  """address"""
  address: String

  """tel"""
  tel: String

  """orgFrontImg"""
  orgFrontImg: [OrgImageType!]

  """orgRoomImg"""
  orgRoomImg: [OrgImageType!]

  """orgOtherImg"""
  orgOtherImg: [OrgImageType!]

  """courses"""
  courses: [CourseType!]
}

type OrganizationResult {
  code: Int!
  message: String!
  data: OrganizationType
}

type OrganizationResults {
  code: Int!
  message: String!
  data: [OrganizationType!]
  page: Page
}

type CourseResult {
  code: Int!
  message: String!
  data: CourseType
}

type CourseResults {
  code: Int!
  message: String!
  data: [CourseType!]
  page: Page
}

type Query {
  """Query user info by id"""
  getUserInfo: UserType!

  """get user by id"""
  find(id: String!): UserType!

  """get oss info"""
  getOSSInfo: OSSType!
  getStudentInfo: StudentResult!
  getStudents(page: PageInput!): StudentResults!
  getOrganizationInfo(id: String!): OrganizationResult!
  getOrganizations(page: PageInput!, name: String): OrganizationResults!
  getCourseInfo(id: String!): CourseResult!
  getCourses(page: PageInput!, name: String): CourseResults!
}

input PageInput {
  pageNum: Float!
  pageSize: Float!
}

type Mutation {
  """add new user"""
  create(params: UserInput!): Boolean!

  """delete an user"""
  del(id: String!): Boolean!

  """update an user"""
  updateUserInfo(id: String!, params: UserInput!): Result!

  """Send shot message code"""
  sendCodeMsg(tel: String!): Result!

  """Login"""
  login(tel: String!, code: String!): Result!
  commitStudentInfo(params: StudentInput!): StudentResult!
  commitOrganization(params: OrganizationInput!, id: String): OrganizationResult!
  deleteOrganization(id: String!): Result!
  commitCourseInfo(params: PartialCourseInput!, id: String): CourseResult!
  deleteCourse(id: String!): Result!
}

input UserInput {
  """nickname"""
  name: String!

  """description"""
  desc: String!

  """avatar"""
  avatar: String!
}

input StudentInput {
  """nickname"""
  name: String!

  """tel"""
  tel: String!

  """avatar"""
  avatar: String!
}

input OrganizationInput {
  """name"""
  name: String!

  """logo"""
  logo: String!

  """tel"""
  tel: String

  """tags"""
  tags: String

  """longitude"""
  longitude: String

  """latitude"""
  latitude: String

  """latitude"""
  address: String

  """license"""
  businessLicense: String!

  """description"""
  description: String!

  """identityCardFrontImg"""
  identityCardFrontImg: String!

  """identityCardBackImg"""
  identityCardBackImg: String!

  """orgFrontImg"""
  orgFrontImg: [OrgImageInput!]

  """orgRoomImg"""
  orgRoomImg: [OrgImageInput!]

  """orgOtherImg"""
  orgOtherImg: [OrgImageInput!]
}

input OrgImageInput {
  id: String
  url: String!
  remark: String
}

input PartialCourseInput {
  """name"""
  name: String

  """desc"""
  desc: String

  """group"""
  group: String

  """baseAbility"""
  baseAbility: String

  """coverUrl"""
  coverUrl: String

  """limitNumber"""
  limitNumber: Float

  """duration"""
  duration: Float

  """reserveInfo"""
  reserveInfo: String

  """refundInfo"""
  refundInfo: String

  """otherInfo"""
  otherInfo: String

  """reducibleTime"""
  reducibleTime: [ReducibleTimeInput!]

  """teachers"""
  teachers: [String!]
}

input ReducibleTimeInput {
  """week"""
  week: String!

  """orderTime json"""
  orderTime: [OrderTimeInput!]!
}

input OrderTimeInput {
  """startTime"""
  startTime: String!

  """endTime"""
  endTime: String!

  """key"""
  key: Float!
}